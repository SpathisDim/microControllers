;  ASM code generated by mikroVirtualMachine for PIC - V. 8.0.0.0
;  Date/Time: 25/6/2020 8:46:35 μμ
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF24	F002			GOTO	_main
$0008	$EF4B	F000			GOTO	_interrupt
$0096	$	_interrupt:
$0096	$C001	F039			MOVFF	STACK_1, STSAVED_1
$009A	$C000	F038			MOVFF	STACK_0, STSAVED_0
$009E	$CFE9	F01A			MOVFF	FSR0L, ?saveFSR0
$00A2	$CFEA	F01B			MOVFF	FSR0H, ?saveFSR0+1
$00A6	$CFE1	F01C			MOVFF	FSR1L, ?saveFSR1
$00AA	$CFE2	F01D			MOVFF	FSR1H, ?saveFSR1+1
;ergasia_part2.c,51 :: 			void interrupt() {
;ergasia_part2.c,52 :: 			if(PORTC.F2 == 0){                                        //an einai kleisto to anoigw
$00AE	$6A01	    			CLRF	STACK_1, 0
$00B0	$B482	    			BTFSC	PORTC, 2, 0
$00B2	$2A01	    			INCF	STACK_1, 1, 0
$00B4	$5001	    			MOVF	STACK_1, 0, 0
$00B6	$0A00	    			XORLW	0
$00B8	$E103	    			BNZ	L_interrupt_23
;ergasia_part2.c,53 :: 			PORTC.F2 = 1;                                        //anoigei o anemistiras
$00BA	$8482	    			BSF	PORTC, 2, 0
;ergasia_part2.c,54 :: 			}else {
$00BC	$EF61	F000			GOTO	L_interrupt_24
$00C0	$	L_interrupt_23:
;ergasia_part2.c,55 :: 			PORTC.F2 = 0;                                         //alliws to kleinw
$00C0	$9482	    			BCF	PORTC, 2, 0
;ergasia_part2.c,56 :: 			}
$00C2	$	L_interrupt_24:
;ergasia_part2.c,57 :: 			INTCON =  0b11010000;                                     //katharismos interrupt flag
$00C2	$0ED0	    			MOVLW	208
$00C4	$6EF2	    			MOVWF	INTCON, 0
;ergasia_part2.c,58 :: 			}
$00C6	$	L_Interrupt_end:
$00C6	$C01A	FFE9			MOVFF	?saveFSR0, FSR0L
$00CA	$C01B	FFEA			MOVFF	?saveFSR0+1, FSR0H
$00CE	$C01C	FFE1			MOVFF	?saveFSR1, FSR1L
$00D2	$C01D	FFE2			MOVFF	?saveFSR1+1, FSR1H
$00D6	$C039	F001			MOVFF	STSAVED_1, STACK_1
$00DA	$C038	F000			MOVFF	STSAVED_0, STACK_0
$00DE	$0011	    			RETFIE
$0018	$	_interrupt_low:
$0018	$C001	F03B			MOVFF	STACK_1, LOW_STSAVED_1
$001C	$C000	F03A			MOVFF	STACK_0, LOW_STSAVED_0
$0020	$CFE8	F01E			MOVFF	WREG, ?Low_saveWERG
$0024	$CFD8	F01F			MOVFF	STATUS, ?Low_saveSTATUS
$0028	$CFE0	F020			MOVFF	BSR, ?Low_saveBSR
$002C	$CFE9	F01A			MOVFF	FSR0L, ?saveFSR0
$0030	$CFEA	F01B			MOVFF	FSR0H, ?saveFSR0+1
$0034	$CFE1	F01C			MOVFF	FSR1L, ?saveFSR1
$0038	$CFE2	F01D			MOVFF	FSR1H, ?saveFSR1+1
;ergasia_part2.c,60 :: 			void interrupt_low() {
;ergasia_part2.c,62 :: 			if(INTCON3.INT1IF){                                       //otan pataw to int1 anoigei to rele1
$003C	$A0F0	    			BTFSS	INTCON3, 0, 0
$003E	$D00A	    			BRA	L_interrupt_low_25
;ergasia_part2.c,63 :: 			if(PORTC.F0 == 0){                                //otan einai svisto
$0040	$0E01	    			MOVLW	1
$0042	$1482	    			ANDWF	PORTC, 0, 0
$0044	$6E01	    			MOVWF	STACK_1, 0
$0046	$5001	    			MOVF	STACK_1, 0, 0
$0048	$0A00	    			XORLW	0
$004A	$E103	    			BNZ	L_interrupt_low_26
;ergasia_part2.c,64 :: 			PORTC.F0 =1;                                   //to anoigw
$004C	$8082	    			BSF	PORTC, 0, 0
;ergasia_part2.c,65 :: 			}else{
$004E	$EF2A	F000			GOTO	L_interrupt_low_27
$0052	$	L_interrupt_low_26:
;ergasia_part2.c,66 :: 			PORTC.F0 = 0;                                  //alliws to kleinw
$0052	$9082	    			BCF	PORTC, 0, 0
;ergasia_part2.c,67 :: 			}
$0054	$	L_interrupt_low_27:
;ergasia_part2.c,68 :: 			}
$0054	$	L_interrupt_low_25:
;ergasia_part2.c,69 :: 			if(INTCON3.INT2IF){                                       //otan pataw to int2
$0054	$A2F0	    			BTFSS	INTCON3, 1, 0
$0056	$D00A	    			BRA	L_interrupt_low_28
;ergasia_part2.c,70 :: 			if(PORTC.F1 == 1){                                   //an einai kleisto to buzzer
$0058	$6A01	    			CLRF	STACK_1, 0
$005A	$B282	    			BTFSC	PORTC, 1, 0
$005C	$2A01	    			INCF	STACK_1, 1, 0
$005E	$5001	    			MOVF	STACK_1, 0, 0
$0060	$0A01	    			XORLW	1
$0062	$E103	    			BNZ	L_interrupt_low_29
;ergasia_part2.c,71 :: 			PORTC.F1 =0;                                       //anoixe to
$0064	$9282	    			BCF	PORTC, 1, 0
;ergasia_part2.c,72 :: 			}else {
$0066	$EF36	F000			GOTO	L_interrupt_low_30
$006A	$	L_interrupt_low_29:
;ergasia_part2.c,73 :: 			PORTC.F1=1;                                        //to ekana auto gia na kleinw to buzzer otan xanapataw int2
$006A	$8282	    			BSF	PORTC, 1, 0
;ergasia_part2.c,74 :: 			}
$006C	$	L_interrupt_low_30:
;ergasia_part2.c,75 :: 			}
$006C	$	L_interrupt_low_28:
;ergasia_part2.c,76 :: 			INTCON3 = 0b00011000;                                     //katharismos interrupt flag
$006C	$0E18	    			MOVLW	24
$006E	$6EF0	    			MOVWF	INTCON3, 0
;ergasia_part2.c,77 :: 			}
$0070	$	L_Low_Interrupt_end:
$0070	$C01E	FFE8			MOVFF	?Low_saveWERG, WREG
$0074	$C01F	FFD8			MOVFF	?Low_saveSTATUS, STATUS
$0078	$C020	FFE0			MOVFF	?Low_saveBSR, BSR
$007C	$C01A	FFE9			MOVFF	?saveFSR0, FSR0L
$0080	$C01B	FFEA			MOVFF	?saveFSR0+1, FSR0H
$0084	$C01C	FFE1			MOVFF	?saveFSR1, FSR1L
$0088	$C01D	FFE2			MOVFF	?saveFSR1+1, FSR1H
$008C	$C03B	F001			MOVFF	LOW_STSAVED_1, STACK_1
$0090	$C03A	F000			MOVFF	LOW_STSAVED_0, STACK_0
$0094	$0010	    			RETFIE	0
$000C	$	_Delay_1us:
;Delays.c,7 :: 			void Delay_1us() {
;Delays.c,8 :: 			Delay_us(1);
$000C	$0000	    			NOP
$000E	$0000	    			NOP
;Delays.c,9 :: 			}
$0010	$0012	    			RETURN
$00E0	$	_Delay_5500us:
;Delays.c,31 :: 			void Delay_5500us() {
;Delays.c,32 :: 			Delay_us(5500);
$00E0	$0E0F	    			MOVLW	15
$00E2	$6E0B	    			MOVWF	STACK_11, 0
$00E4	$0EFF	    			MOVLW	255
$00E6	$6E0A	    			MOVWF	STACK_10, 0
$00E8	$2E0B	    			DECFSZ	STACK_11, F, 0
$00EA	$D001	    			BRA	$+2
$00EC	$D003	    			BRA	$+4
$00EE	$2E0A	    			DECFSZ	STACK_10, F, 0
$00F0	$D7FE	    			BRA	$-1
$00F2	$D7FA	    			BRA	$-5
$00F4	$0E3E	    			MOVLW	62
$00F6	$6E0A	    			MOVWF	STACK_10, 0
$00F8	$2E0A	    			DECFSZ	STACK_10, F, 0
$00FA	$D7FE	    			BRA	$-1
;Delays.c,33 :: 			}
$00FC	$0012	    			RETURN
$00FE	$	_Delay_50us:
;Delays.c,19 :: 			void Delay_50us() {
;Delays.c,20 :: 			Delay_us(50);
$00FE	$0E21	    			MOVLW	33
$0100	$6E0A	    			MOVWF	STACK_10, 0
$0102	$2E0A	    			DECFSZ	STACK_10, F, 0
$0104	$D7FE	    			BRA	$-1
;Delays.c,21 :: 			}
$0106	$0012	    			RETURN
$0108	$	_Lcd8_Cmd:
$0108	$C015	FFE9			MOVFF	Lcd8bit_main_global_dataAddress, FSR0L
$010C	$C016	FFEA			MOVFF	Lcd8bit_main_global_dataAddress+1, FSR0H
$0110	$C017	FFE1			MOVFF	Lcd8bit_main_global_ctrlAddress, FSR1L
$0114	$C018	FFE2			MOVFF	Lcd8bit_main_global_ctrlAddress+1, FSR1H
$0118	$6AEF	    			CLRF	INDF0, 0
$011A	$5237	    			MOVF	FARG_Lcd8_Cmd+0, 1, 0
$011C	$E000	    			BZ	L_Lcd8_Cmd_0
$011E	$	L_Lcd8_Cmd_0:
$011E	$BE37	    			BTFSC	FARG_Lcd8_Cmd+0, 7, 0
$0120	$8EEF	    			BSF	INDF0, __LCD8_DB7, 0
$0122	$BC37	    			BTFSC	FARG_Lcd8_Cmd+0, 6, 0
$0124	$8CEF	    			BSF	INDF0, __LCD8_DB6, 0
$0126	$BA37	    			BTFSC	FARG_Lcd8_Cmd+0, 5, 0
$0128	$8AEF	    			BSF	INDF0, __LCD8_DB5, 0
$012A	$B837	    			BTFSC	FARG_Lcd8_Cmd+0, 4, 0
$012C	$88EF	    			BSF	INDF0, __LCD8_DB4, 0
$012E	$B637	    			BTFSC	FARG_Lcd8_Cmd+0, 3, 0
$0130	$86EF	    			BSF	INDF0, __LCD8_DB3, 0
$0132	$B437	    			BTFSC	FARG_Lcd8_Cmd+0, 2, 0
$0134	$84EF	    			BSF	INDF0, __LCD8_DB2, 0
$0136	$B237	    			BTFSC	FARG_Lcd8_Cmd+0, 1, 0
$0138	$82EF	    			BSF	INDF0, __LCD8_DB1, 0
$013A	$B037	    			BTFSC	FARG_Lcd8_Cmd+0, 0, 0
$013C	$80EF	    			BSF	INDF0, __LCD8_DB0, 0
$013E	$5019	    			MOVF	Lcd8bit_main_global_cmd, 0, 0
$0140	$0A01	    			XORLW	1
$0142	$E103	    			BNZ	L_Lcd8_Cmd_1
$0144	$94E7	    			BCF	INDF1, __LCD8_RS, 0
$0146	$EFA6	F000			GOTO	L_Lcd8_Cmd_2
$014A	$	L_Lcd8_Cmd_1:
$014A	$84E7	    			BSF	INDF1, __LCD8_RS, 0
$014C	$	L_Lcd8_Cmd_2:
$014C	$82E7	    			BSF	INDF1, __LCD8_ENABLE, 0
$014E	$EC06	F000			CALL	_Delay_1us
$0152	$92E7	    			BCF	INDF1, __LCD8_ENABLE, 0
$0154	$5019	    			MOVF	Lcd8bit_main_global_cmd, 0, 0
$0156	$0A01	    			XORLW	1
$0158	$E103	    			BNZ	L_Lcd8_Cmd_3
$015A	$EC70	F000			CALL	_Delay_5500us
$015E	$D002	    			BRA	L_Lcd8_Cmd_4
$0160	$	L_Lcd8_Cmd_3:
$0160	$EC7F	F000			CALL	_Delay_50us
$0164	$	L_Lcd8_Cmd_4:
$0164	$0012	    			RETURN
$0166	$	_my_read_keypad:
;ergasia_part2.c,2 :: 			char  my_read_keypad()
;ergasia_part2.c,7 :: 			PORTD = 0xFF;                    //arxikopoiw ola ta podarakia tou D sto 1
$0166	$0EFF	    			MOVLW	255
$0168	$6E83	    			MOVWF	PORTD, 0
;ergasia_part2.c,8 :: 			TRISD = 0xFF;                    //kanw to portD ws eisodo
$016A	$0EFF	    			MOVLW	255
$016C	$6E95	    			MOVWF	TRISD, 0
;ergasia_part2.c,10 :: 			TRISB = 0x00;                    //kanw to portB ws eisodo
$016E	$6A93	    			CLRF	TRISB, 0
;ergasia_part2.c,11 :: 			PORTB = 0xFF;                    //arxikopoiw ola ta podarakia tou B sto 1
$0170	$0EFF	    			MOVLW	255
$0172	$6E81	    			MOVWF	PORTB, 0
;ergasia_part2.c,13 :: 			key =0;
$0174	$6A33	    			CLRF	my_read_keypad_key_L0, 0
;ergasia_part2.c,15 :: 			do {     //scan continuously until a key is pressed on the keypad.
$0176	$	L_my_read_keypad_0:
;ergasia_part2.c,18 :: 			PORTB.F0 = 0;
$0176	$9081	    			BCF	PORTB, 0, 0
;ergasia_part2.c,19 :: 			delay_ms(1);
$0178	$0E03	    			MOVLW	3
$017A	$6E0B	    			MOVWF	STACK_11, 0
$017C	$0EFF	    			MOVLW	255
$017E	$6E0A	    			MOVWF	STACK_10, 0
$0180	$2E0B	    			DECFSZ	STACK_11, F, 0
$0182	$D001	    			BRA	$+2
$0184	$D003	    			BRA	$+4
$0186	$2E0A	    			DECFSZ	STACK_10, F, 0
$0188	$D7FE	    			BRA	$-1
$018A	$D7FA	    			BRA	$-5
$018C	$0E96	    			MOVLW	150
$018E	$6E0A	    			MOVWF	STACK_10, 0
$0190	$2E0A	    			DECFSZ	STACK_10, F, 0
$0192	$D7FE	    			BRA	$-1
;ergasia_part2.c,20 :: 			var = PORTD;
$0194	$CF83	F032			MOVFF	PORTD, my_read_keypad_var_L0
;ergasia_part2.c,21 :: 			if (var.F0 == 0)      key = '<';
$0198	$0E01	    			MOVLW	1
$019A	$1432	    			ANDWF	my_read_keypad_var_L0, 0, 0
$019C	$6E01	    			MOVWF	STACK_1, 0
$019E	$5001	    			MOVF	STACK_1, 0, 0
$01A0	$0A00	    			XORLW	0
$01A2	$E103	    			BNZ	L_my_read_keypad_2
$01A4	$0E3C	    			MOVLW	60
$01A6	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$01A8	$D01A	    			BRA	L_my_read_keypad_3
$01AA	$	L_my_read_keypad_2:
;ergasia_part2.c,22 :: 			else if (var.F1 == 0) key = '7';
$01AA	$6A01	    			CLRF	STACK_1, 0
$01AC	$B232	    			BTFSC	my_read_keypad_var_L0, 1, 0
$01AE	$2A01	    			INCF	STACK_1, 1, 0
$01B0	$5001	    			MOVF	STACK_1, 0, 0
$01B2	$0A00	    			XORLW	0
$01B4	$E103	    			BNZ	L_my_read_keypad_4
$01B6	$0E37	    			MOVLW	55
$01B8	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$01BA	$D011	    			BRA	L_my_read_keypad_5
$01BC	$	L_my_read_keypad_4:
;ergasia_part2.c,23 :: 			else if (var.F2 == 0) key = '4';
$01BC	$6A01	    			CLRF	STACK_1, 0
$01BE	$B432	    			BTFSC	my_read_keypad_var_L0, 2, 0
$01C0	$2A01	    			INCF	STACK_1, 1, 0
$01C2	$5001	    			MOVF	STACK_1, 0, 0
$01C4	$0A00	    			XORLW	0
$01C6	$E103	    			BNZ	L_my_read_keypad_6
$01C8	$0E34	    			MOVLW	52
$01CA	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$01CC	$D008	    			BRA	L_my_read_keypad_7
$01CE	$	L_my_read_keypad_6:
;ergasia_part2.c,24 :: 			else if (var.F3 == 0) key = '1';
$01CE	$6A01	    			CLRF	STACK_1, 0
$01D0	$B632	    			BTFSC	my_read_keypad_var_L0, 3, 0
$01D2	$2A01	    			INCF	STACK_1, 1, 0
$01D4	$5001	    			MOVF	STACK_1, 0, 0
$01D6	$0A00	    			XORLW	0
$01D8	$E102	    			BNZ	L_my_read_keypad_8
$01DA	$0E31	    			MOVLW	49
$01DC	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$01DE	$	L_my_read_keypad_8:
$01DE	$	L_my_read_keypad_7:
$01DE	$	L_my_read_keypad_5:
$01DE	$	L_my_read_keypad_3:
;ergasia_part2.c,25 :: 			PORTB.F0 =1;    //restore RB0 to 1.
$01DE	$8081	    			BSF	PORTB, 0, 0
;ergasia_part2.c,28 :: 			PORTB.F1 = 0;
$01E0	$9281	    			BCF	PORTB, 1, 0
;ergasia_part2.c,29 :: 			delay_ms(1);
$01E2	$0E03	    			MOVLW	3
$01E4	$6E0B	    			MOVWF	STACK_11, 0
$01E6	$0EFF	    			MOVLW	255
$01E8	$6E0A	    			MOVWF	STACK_10, 0
$01EA	$2E0B	    			DECFSZ	STACK_11, F, 0
$01EC	$D001	    			BRA	$+2
$01EE	$D003	    			BRA	$+4
$01F0	$2E0A	    			DECFSZ	STACK_10, F, 0
$01F2	$D7FE	    			BRA	$-1
$01F4	$D7FA	    			BRA	$-5
$01F6	$0E96	    			MOVLW	150
$01F8	$6E0A	    			MOVWF	STACK_10, 0
$01FA	$2E0A	    			DECFSZ	STACK_10, F, 0
$01FC	$D7FE	    			BRA	$-1
;ergasia_part2.c,30 :: 			var = PORTD;
$01FE	$CF83	F032			MOVFF	PORTD, my_read_keypad_var_L0
;ergasia_part2.c,31 :: 			if (var.F0 == 0)      key = '0';
$0202	$0E01	    			MOVLW	1
$0204	$1432	    			ANDWF	my_read_keypad_var_L0, 0, 0
$0206	$6E01	    			MOVWF	STACK_1, 0
$0208	$5001	    			MOVF	STACK_1, 0, 0
$020A	$0A00	    			XORLW	0
$020C	$E103	    			BNZ	L_my_read_keypad_9
$020E	$0E30	    			MOVLW	48
$0210	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$0212	$D01A	    			BRA	L_my_read_keypad_10
$0214	$	L_my_read_keypad_9:
;ergasia_part2.c,32 :: 			else if (var.F1 == 0) key = '8';
$0214	$6A01	    			CLRF	STACK_1, 0
$0216	$B232	    			BTFSC	my_read_keypad_var_L0, 1, 0
$0218	$2A01	    			INCF	STACK_1, 1, 0
$021A	$5001	    			MOVF	STACK_1, 0, 0
$021C	$0A00	    			XORLW	0
$021E	$E103	    			BNZ	L_my_read_keypad_11
$0220	$0E38	    			MOVLW	56
$0222	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$0224	$D011	    			BRA	L_my_read_keypad_12
$0226	$	L_my_read_keypad_11:
;ergasia_part2.c,33 :: 			else if (var.F2 == 0) key = '5';
$0226	$6A01	    			CLRF	STACK_1, 0
$0228	$B432	    			BTFSC	my_read_keypad_var_L0, 2, 0
$022A	$2A01	    			INCF	STACK_1, 1, 0
$022C	$5001	    			MOVF	STACK_1, 0, 0
$022E	$0A00	    			XORLW	0
$0230	$E103	    			BNZ	L_my_read_keypad_13
$0232	$0E35	    			MOVLW	53
$0234	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$0236	$D008	    			BRA	L_my_read_keypad_14
$0238	$	L_my_read_keypad_13:
;ergasia_part2.c,34 :: 			else if (var.F3 == 0) key = '2';
$0238	$6A01	    			CLRF	STACK_1, 0
$023A	$B632	    			BTFSC	my_read_keypad_var_L0, 3, 0
$023C	$2A01	    			INCF	STACK_1, 1, 0
$023E	$5001	    			MOVF	STACK_1, 0, 0
$0240	$0A00	    			XORLW	0
$0242	$E102	    			BNZ	L_my_read_keypad_15
$0244	$0E32	    			MOVLW	50
$0246	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$0248	$	L_my_read_keypad_15:
$0248	$	L_my_read_keypad_14:
$0248	$	L_my_read_keypad_12:
$0248	$	L_my_read_keypad_10:
;ergasia_part2.c,35 :: 			PORTB.F1 =1;   //restore RB1 to 1
$0248	$8281	    			BSF	PORTB, 1, 0
;ergasia_part2.c,38 :: 			PORTB.F2 =0;
$024A	$9481	    			BCF	PORTB, 2, 0
;ergasia_part2.c,39 :: 			delay_ms(1);
$024C	$0E03	    			MOVLW	3
$024E	$6E0B	    			MOVWF	STACK_11, 0
$0250	$0EFF	    			MOVLW	255
$0252	$6E0A	    			MOVWF	STACK_10, 0
$0254	$2E0B	    			DECFSZ	STACK_11, F, 0
$0256	$D001	    			BRA	$+2
$0258	$D003	    			BRA	$+4
$025A	$2E0A	    			DECFSZ	STACK_10, F, 0
$025C	$D7FE	    			BRA	$-1
$025E	$D7FA	    			BRA	$-5
$0260	$0E96	    			MOVLW	150
$0262	$6E0A	    			MOVWF	STACK_10, 0
$0264	$2E0A	    			DECFSZ	STACK_10, F, 0
$0266	$D7FE	    			BRA	$-1
;ergasia_part2.c,40 :: 			var = PORTD;
$0268	$CF83	F032			MOVFF	PORTD, my_read_keypad_var_L0
;ergasia_part2.c,41 :: 			if (var.F0 == 0)      key = '>';
$026C	$0E01	    			MOVLW	1
$026E	$1432	    			ANDWF	my_read_keypad_var_L0, 0, 0
$0270	$6E01	    			MOVWF	STACK_1, 0
$0272	$5001	    			MOVF	STACK_1, 0, 0
$0274	$0A00	    			XORLW	0
$0276	$E103	    			BNZ	L_my_read_keypad_16
$0278	$0E3E	    			MOVLW	62
$027A	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$027C	$D01A	    			BRA	L_my_read_keypad_17
$027E	$	L_my_read_keypad_16:
;ergasia_part2.c,42 :: 			else if (var.F1 == 0) key = '9';
$027E	$6A01	    			CLRF	STACK_1, 0
$0280	$B232	    			BTFSC	my_read_keypad_var_L0, 1, 0
$0282	$2A01	    			INCF	STACK_1, 1, 0
$0284	$5001	    			MOVF	STACK_1, 0, 0
$0286	$0A00	    			XORLW	0
$0288	$E103	    			BNZ	L_my_read_keypad_18
$028A	$0E39	    			MOVLW	57
$028C	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$028E	$D011	    			BRA	L_my_read_keypad_19
$0290	$	L_my_read_keypad_18:
;ergasia_part2.c,43 :: 			else if (var.F2 == 0) key = '6';
$0290	$6A01	    			CLRF	STACK_1, 0
$0292	$B432	    			BTFSC	my_read_keypad_var_L0, 2, 0
$0294	$2A01	    			INCF	STACK_1, 1, 0
$0296	$5001	    			MOVF	STACK_1, 0, 0
$0298	$0A00	    			XORLW	0
$029A	$E103	    			BNZ	L_my_read_keypad_20
$029C	$0E36	    			MOVLW	54
$029E	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$02A0	$D008	    			BRA	L_my_read_keypad_21
$02A2	$	L_my_read_keypad_20:
;ergasia_part2.c,44 :: 			else if (var.F3 == 0) key = '3';
$02A2	$6A01	    			CLRF	STACK_1, 0
$02A4	$B632	    			BTFSC	my_read_keypad_var_L0, 3, 0
$02A6	$2A01	    			INCF	STACK_1, 1, 0
$02A8	$5001	    			MOVF	STACK_1, 0, 0
$02AA	$0A00	    			XORLW	0
$02AC	$E102	    			BNZ	L_my_read_keypad_22
$02AE	$0E33	    			MOVLW	51
$02B0	$6E33	    			MOVWF	my_read_keypad_key_L0, 0
$02B2	$	L_my_read_keypad_22:
$02B2	$	L_my_read_keypad_21:
$02B2	$	L_my_read_keypad_19:
$02B2	$	L_my_read_keypad_17:
;ergasia_part2.c,45 :: 			PORTB.F2 =1;  //restore RB2 to 1
$02B2	$8481	    			BSF	PORTB, 2, 0
;ergasia_part2.c,46 :: 			}while (key == 0);
$02B4	$5033	    			MOVF	my_read_keypad_key_L0, 0, 0
$02B6	$0A00	    			XORLW	0
$02B8	$B4D8	    			BTFSC	STATUS, Z, 0
$02BA	$D75D	    			BRA	L_my_read_keypad_0
$02BC	$	L_my_read_keypad_1:
;ergasia_part2.c,47 :: 			return key;
$02BC	$C033	F000			MOVFF	my_read_keypad_key_L0, STACK_0
;ergasia_part2.c,48 :: 			}
$02C0	$0012	    			RETURN
$02C2	$	_LCD8_Out:
$02C2	$D00F	    			BRA	L_LCD8_Out_12
$02C4	$	L_LCD8_Out_14:
$02C4	$0E80	    			MOVLW	128
$02C6	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$02C8	$D019	    			BRA	L_LCD8_Out_13
$02CA	$	L_LCD8_Out_15:
$02CA	$0EC0	    			MOVLW	192
$02CC	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$02CE	$D016	    			BRA	L_LCD8_Out_13
$02D0	$	L_LCD8_Out_16:
$02D0	$0E94	    			MOVLW	148
$02D2	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$02D4	$D013	    			BRA	L_LCD8_Out_13
$02D6	$	L_LCD8_Out_17:
$02D6	$0ED4	    			MOVLW	212
$02D8	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$02DA	$D010	    			BRA	L_LCD8_Out_13
$02DC	$	L_LCD8_Out_18:
$02DC	$0E80	    			MOVLW	128
$02DE	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$02E0	$D00D	    			BRA	L_LCD8_Out_13
$02E2	$	L_LCD8_Out_12:
$02E2	$5032	    			MOVF	FARG_LCD8_Out+0, 0, 0
$02E4	$0A01	    			XORLW	1
$02E6	$E0EE	    			BZ	L_LCD8_Out_14
$02E8	$5032	    			MOVF	FARG_LCD8_Out+0, 0, 0
$02EA	$0A02	    			XORLW	2
$02EC	$E0EE	    			BZ	L_LCD8_Out_15
$02EE	$5032	    			MOVF	FARG_LCD8_Out+0, 0, 0
$02F0	$0A03	    			XORLW	3
$02F2	$E0EE	    			BZ	L_LCD8_Out_16
$02F4	$5032	    			MOVF	FARG_LCD8_Out+0, 0, 0
$02F6	$0A04	    			XORLW	4
$02F8	$E0EE	    			BZ	L_LCD8_Out_17
$02FA	$D7F0	    			BRA	L_LCD8_Out_18
$02FC	$	L_LCD8_Out_13:
$02FC	$0433	    			DECF	FARG_LCD8_Out+1, 0, 0
$02FE	$6E00	    			MOVWF	STACK_0, 0
$0300	$5032	    			MOVF	FARG_LCD8_Out+0, 0, 0
$0302	$2600	    			ADDWF	STACK_0, 1, 0
$0304	$C000	F032			MOVFF	STACK_0, FARG_LCD8_Out+0
$0308	$0E01	    			MOVLW	1
$030A	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$030C	$C000	F037			MOVFF	STACK_0, FARG_Lcd8_Cmd+0
$0310	$EC84	F000			CALL	_Lcd8_Cmd
$0314	$6A19	    			CLRF	Lcd8bit_main_global_cmd, 0
$0316	$6A36	    			CLRF	LCD8_Out_i_L0, 0
$0318	$	L_LCD8_Out_19:
$0318	$5036	    			MOVF	LCD8_Out_i_L0, 0, 0
$031A	$2434	    			ADDWF	FARG_LCD8_Out+2, 0, 0
$031C	$6EE9	    			MOVWF	FSR0L, 0
$031E	$0E00	    			MOVLW	0
$0320	$2035	    			ADDWFC	FARG_LCD8_Out+3, 0, 0
$0322	$6EEA	    			MOVWF	FSR0L+1, 0
$0324	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$0328	$5200	    			MOVF	STACK_0, 1, 0
$032A	$E00C	    			BZ	L_LCD8_Out_20
$032C	$5036	    			MOVF	LCD8_Out_i_L0, 0, 0
$032E	$2434	    			ADDWF	FARG_LCD8_Out+2, 0, 0
$0330	$6EE9	    			MOVWF	FSR0L, 0
$0332	$0E00	    			MOVLW	0
$0334	$2035	    			ADDWFC	FARG_LCD8_Out+3, 0, 0
$0336	$6EEA	    			MOVWF	FSR0L+1, 0
$0338	$CFEE	F037			MOVFF	POSTINC0, FARG_Lcd8_Cmd+0
$033C	$EC84	F000			CALL	_Lcd8_Cmd
$0340	$2A36	    			INCF	LCD8_Out_i_L0, 1, 0
$0342	$D7EA	    			BRA	L_LCD8_Out_19
$0344	$	L_LCD8_Out_20:
$0344	$0E01	    			MOVLW	1
$0346	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$0348	$0012	    			RETURN
$034A	$	_Lcd8_Chr:
$034A	$D00F	    			BRA	L_Lcd8_Chr_5
$034C	$	L_Lcd8_Chr_7:
$034C	$0E80	    			MOVLW	128
$034E	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$0350	$D019	    			BRA	L_Lcd8_Chr_6
$0352	$	L_Lcd8_Chr_8:
$0352	$0EC0	    			MOVLW	192
$0354	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$0356	$D016	    			BRA	L_Lcd8_Chr_6
$0358	$	L_Lcd8_Chr_9:
$0358	$0E94	    			MOVLW	148
$035A	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$035C	$D013	    			BRA	L_Lcd8_Chr_6
$035E	$	L_Lcd8_Chr_10:
$035E	$0ED4	    			MOVLW	212
$0360	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$0362	$D010	    			BRA	L_Lcd8_Chr_6
$0364	$	L_Lcd8_Chr_11:
$0364	$0E80	    			MOVLW	128
$0366	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$0368	$D00D	    			BRA	L_Lcd8_Chr_6
$036A	$	L_Lcd8_Chr_5:
$036A	$5032	    			MOVF	FARG_Lcd8_Chr+0, 0, 0
$036C	$0A01	    			XORLW	1
$036E	$E0EE	    			BZ	L_Lcd8_Chr_7
$0370	$5032	    			MOVF	FARG_Lcd8_Chr+0, 0, 0
$0372	$0A02	    			XORLW	2
$0374	$E0EE	    			BZ	L_Lcd8_Chr_8
$0376	$5032	    			MOVF	FARG_Lcd8_Chr+0, 0, 0
$0378	$0A03	    			XORLW	3
$037A	$E0EE	    			BZ	L_Lcd8_Chr_9
$037C	$5032	    			MOVF	FARG_Lcd8_Chr+0, 0, 0
$037E	$0A04	    			XORLW	4
$0380	$E0EE	    			BZ	L_Lcd8_Chr_10
$0382	$D7F0	    			BRA	L_Lcd8_Chr_11
$0384	$	L_Lcd8_Chr_6:
$0384	$0433	    			DECF	FARG_Lcd8_Chr+1, 0, 0
$0386	$6E00	    			MOVWF	STACK_0, 0
$0388	$5032	    			MOVF	FARG_Lcd8_Chr+0, 0, 0
$038A	$2600	    			ADDWF	STACK_0, 1, 0
$038C	$C000	F032			MOVFF	STACK_0, FARG_Lcd8_Chr+0
$0390	$0E01	    			MOVLW	1
$0392	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$0394	$C000	F037			MOVFF	STACK_0, FARG_Lcd8_Cmd+0
$0398	$EC84	F000			CALL	_Lcd8_Cmd
$039C	$6A19	    			CLRF	Lcd8bit_main_global_cmd, 0
$039E	$C034	F037			MOVFF	FARG_Lcd8_Chr+2, FARG_Lcd8_Cmd+0
$03A2	$EC84	F000			CALL	_Lcd8_Cmd
$03A6	$0E01	    			MOVLW	1
$03A8	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$03AA	$0012	    			RETURN
$03AC	$	_Lcd8_Init:
$03AC	$EC70	F000			CALL	_Delay_5500us
$03B0	$EC70	F000			CALL	_Delay_5500us
$03B4	$EC70	F000			CALL	_Delay_5500us
$03B8	$C034	F015			MOVFF	FARG_Lcd8_Init+2, Lcd8bit_main_global_dataAddress
$03BC	$C035	F016			MOVFF	FARG_Lcd8_Init+3, Lcd8bit_main_global_dataAddress+1
$03C0	$C032	F017			MOVFF	FARG_Lcd8_Init+0, Lcd8bit_main_global_ctrlAddress
$03C4	$C033	F018			MOVFF	FARG_Lcd8_Init+1, Lcd8bit_main_global_ctrlAddress+1
$03C8	$C032	FFE9			MOVFF	FARG_Lcd8_Init+0, FSR0L
$03CC	$C033	FFEA			MOVFF	FARG_Lcd8_Init+1, FSR0H
$03D0	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$03D2	$C034	FFE1			MOVFF	FARG_Lcd8_Init+2, FSR1L
$03D6	$C035	FFE2			MOVFF	FARG_Lcd8_Init+3, FSR1H
$03DA	$6AE6	    			CLRF	POSTINC1, 0
$03DC	$0E11	    			MOVLW	17
$03DE	$24E1	    			ADDWF	FSR1L, 0, 0
$03E0	$6E00	    			MOVWF	STACK_0, 0
$03E2	$C000	FFE1			MOVFF	STACK_0, FSR1L
$03E6	$6AE7	    			CLRF	INDF1, 0
$03E8	$0E12	    			MOVLW	18
$03EA	$5C00	    			SUBWF	STACK_0, 0, 0
$03EC	$6EE1	    			MOVWF	FSR1L, 0
$03EE	$0E12	    			MOVLW	18
$03F0	$26E9	    			ADDWF	FSR0L, 1, 0
$03F2	$92EF	    			BCF	INDF0, __LCD8_ENABLE, 0
$03F4	$94EF	    			BCF	INDF0, __LCD8_RS, 0
$03F6	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$03F8	$0E12	    			MOVLW	18
$03FA	$5EE9	    			SUBWF	FSR0L, 1, 0
$03FC	$94EF	    			BCF	INDF0, __LCD8_RS, 0
$03FE	$92EF	    			BCF	INDF0, __LCD8_ENABLE, 0
$0400	$90EF	    			BCF	INDF0, __LCD8_RW, 0
$0402	$0E30	    			MOVLW	48
$0404	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0406	$EC84	F000			CALL	_Lcd8_Cmd
$040A	$0E30	    			MOVLW	48
$040C	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$040E	$EC84	F000			CALL	_Lcd8_Cmd
$0412	$0E30	    			MOVLW	48
$0414	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0416	$EC84	F000			CALL	_Lcd8_Cmd
$041A	$0E38	    			MOVLW	56
$041C	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$041E	$EC84	F000			CALL	_Lcd8_Cmd
$0422	$0E08	    			MOVLW	8
$0424	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0426	$EC84	F000			CALL	_Lcd8_Cmd
$042A	$0E01	    			MOVLW	1
$042C	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$042E	$EC84	F000			CALL	_Lcd8_Cmd
$0432	$0E06	    			MOVLW	6
$0434	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$0436	$EC84	F000			CALL	_Lcd8_Cmd
$043A	$0E0C	    			MOVLW	12
$043C	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$043E	$EC84	F000			CALL	_Lcd8_Cmd
$0442	$0E01	    			MOVLW	1
$0444	$6E19	    			MOVWF	Lcd8bit_main_global_cmd, 0
$0446	$0012	    			RETURN
$0448	$	_main:
$0448	$0E35	    			MOVLW	53
$044A	$6E25	    			MOVWF	lstr1_ergasia_part2+0, 0
$044C	$0E6F	    			MOVLW	111
$044E	$6E26	    			MOVWF	lstr1_ergasia_part2+1, 0
$0450	$0E20	    			MOVLW	32
$0452	$6E27	    			MOVWF	lstr1_ergasia_part2+2, 0
$0454	$0E45	    			MOVLW	69
$0456	$6E28	    			MOVWF	lstr1_ergasia_part2+3, 0
$0458	$0E72	    			MOVLW	114
$045A	$6E29	    			MOVWF	lstr1_ergasia_part2+4, 0
$045C	$0E77	    			MOVLW	119
$045E	$6E2A	    			MOVWF	lstr1_ergasia_part2+5, 0
$0460	$0E74	    			MOVLW	116
$0462	$6E2B	    			MOVWF	lstr1_ergasia_part2+6, 0
$0464	$0E69	    			MOVLW	105
$0466	$6E2C	    			MOVWF	lstr1_ergasia_part2+7, 0
$0468	$0E6D	    			MOVLW	109
$046A	$6E2D	    			MOVWF	lstr1_ergasia_part2+8, 0
$046C	$0E61	    			MOVLW	97
$046E	$6E2E	    			MOVWF	lstr1_ergasia_part2+9, 0
$0470	$6A2F	    			CLRF	lstr1_ergasia_part2+10, 0
;ergasia_part2.c,80 :: 			void main(){
;ergasia_part2.c,82 :: 			int i=0x41;                                                    //se HEX to A
$0472	$0E41	    			MOVLW	65
$0474	$6E30	    			MOVWF	main_i_L0, 0
$0476	$0E00	    			MOVLW	0
$0478	$6E31	    			MOVWF	main_i_L0+1, 0
;ergasia_part2.c,83 :: 			keypressed=my_read_keypad();
$047A	$ECB3	F000			CALL	_my_read_keypad
;ergasia_part2.c,84 :: 			TRISB=0x0F;                                                    //gia to keypad
$047E	$0E0F	    			MOVLW	15
$0480	$6E93	    			MOVWF	TRISB, 0
;ergasia_part2.c,88 :: 			TRISC =0x00;                                              //energopoiw to portc ws exodo
$0482	$6A94	    			CLRF	TRISC, 0
;ergasia_part2.c,89 :: 			PORTC.F1 = 1;                                             //thelw na einai kleisto stin arxi to buzzer gia na to anoigw patwntas to int2
$0484	$8282	    			BSF	PORTC, 1, 0
;ergasia_part2.c,91 :: 			PORTC.F0 = 0; //otan dinw tin timi 5 apo to keypad gia na xekinisei to erwtima anoigei to rele1 enw thelw na to anoigw egw me to int1 ara to mhdenizw edw kai tha anoigei me to int1
$0486	$9082	    			BCF	PORTC, 0, 0
;ergasia_part2.c,94 :: 			INTCON =  0b11010000;                                    //gia to interrupt 0
$0488	$0ED0	    			MOVLW	208
$048A	$6EF2	    			MOVWF	INTCON, 0
;ergasia_part2.c,95 :: 			INTCON3 = 0b00011000;                                    //vazw 1 sto 4o bit gia na kanw enable ektos apo to int1 kai to int2
$048C	$0E18	    			MOVLW	24
$048E	$6EF0	    			MOVWF	INTCON3, 0
;ergasia_part2.c,96 :: 			RCON =0x80;
$0490	$0E80	    			MOVLW	128
$0492	$6ED0	    			MOVWF	RCON, 0
;ergasia_part2.c,98 :: 			Lcd8_Config(&PORTE, &PORTD, 2,1,0, 7,6,5,4,3,2,1,0);     //define PORT and PIN Connections
$0494	$0E84	    			MOVLW	PORTE
$0496	$6E32	    			MOVWF	FARG_Lcd8_Init+0, 0
$0498	$0E0F	    			MOVLW	@PORTE
$049A	$6E33	    			MOVWF	FARG_Lcd8_Init+1, 0
$049C	$0E83	    			MOVLW	PORTD
$049E	$6E34	    			MOVWF	FARG_Lcd8_Init+2, 0
$04A0	$0E0F	    			MOVLW	@PORTD
$04A2	$6E35	    			MOVWF	FARG_Lcd8_Init+3, 0
$04A4	$ECD6	F001			CALL	_Lcd8_Init
;ergasia_part2.c,99 :: 			Lcd8_Cmd(LCD_CURSOR_OFF);                                // Turn off blinking cursor
$04A8	$0E0C	    			MOVLW	12
$04AA	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$04AC	$EC84	F000			CALL	_Lcd8_Cmd
;ergasia_part2.c,100 :: 			Lcd8_Cmd(LCD_CLEAR);                                     // Clear screen
$04B0	$0E01	    			MOVLW	1
$04B2	$6E37	    			MOVWF	FARG_Lcd8_Cmd+0, 0
$04B4	$EC84	F000			CALL	_Lcd8_Cmd
;ergasia_part2.c,102 :: 			Lcd8_Out(1, 1, "5o Erwtima");
$04B8	$0E01	    			MOVLW	1
$04BA	$6E32	    			MOVWF	FARG_LCD8_Out+0, 0
$04BC	$0E01	    			MOVLW	1
$04BE	$6E33	    			MOVWF	FARG_LCD8_Out+1, 0
$04C0	$0E25	    			MOVLW	lstr1_ergasia_part2
$04C2	$6E34	    			MOVWF	FARG_LCD8_Out+2, 0
$04C4	$0E00	    			MOVLW	@lstr1_ergasia_part2
$04C6	$6E35	    			MOVWF	FARG_LCD8_Out+3, 0
$04C8	$EC61	F001			CALL	_LCD8_Out
;ergasia_part2.c,103 :: 			while (1){                                               //while gia na emfanizw sunexws sto LCD ta kefalaia grammata A..Z
$04CC	$	L_main_32:
;ergasia_part2.c,104 :: 			Lcd8_Chr(2,5, i);
$04CC	$0E02	    			MOVLW	2
$04CE	$6E32	    			MOVWF	FARG_Lcd8_Chr+0, 0
$04D0	$0E05	    			MOVLW	5
$04D2	$6E33	    			MOVWF	FARG_Lcd8_Chr+1, 0
$04D4	$C030	F034			MOVFF	main_i_L0, FARG_Lcd8_Chr+2
$04D8	$ECA5	F001			CALL	_Lcd8_Chr
;ergasia_part2.c,105 :: 			i++;                                                  //A......Z
$04DC	$4A30	    			INFSNZ	main_i_L0, 1, 0
$04DE	$2A31	    			INCF	main_i_L0+1, 1, 0
;ergasia_part2.c,106 :: 			if (i>0x5A) i=0x41;                                   //otan ftasei sto Z paei pali sto A
$04E0	$0E80	    			MOVLW	128
$04E2	$6E00	    			MOVWF	STACK_0, 0
$04E4	$0E80	    			MOVLW	128
$04E6	$1831	    			XORWF	main_i_L0+1, 0, 0
$04E8	$5C00	    			SUBWF	STACK_0, 0, 0
$04EA	$E102	    			BNZ	L_main_35
$04EC	$5030	    			MOVF	main_i_L0, 0, 0
$04EE	$085A	    			SUBLW	90
$04F0	$	L_main_35:
$04F0	$E204	    			BC	L_main_34
$04F2	$0E41	    			MOVLW	65
$04F4	$6E30	    			MOVWF	main_i_L0, 0
$04F6	$0E00	    			MOVLW	0
$04F8	$6E31	    			MOVWF	main_i_L0+1, 0
$04FA	$	L_main_34:
;ergasia_part2.c,107 :: 			}
$04FA	$D7E8	    			BRA	L_main_32
;ergasia_part2.c,111 :: 			}
$04FC	$D7FF	    			BRA	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$000C		Delay_1us
$0018		interrupt_low
$0096		interrupt
$00E0		Delay_5500us
$00FE		Delay_50us
$0108		Lcd8_Cmd
$0166		my_read_keypad
$02C2		LCD8_Out
$034A		Lcd8_Chr
$03AC		Lcd8_Init
$0448		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$000C		_Delay_1us:
$0018		_interrupt_low:
$0052		L_interrupt_low_26:
$0054		L_interrupt_low_25:
$0054		L_interrupt_low_27:
$006A		L_interrupt_low_29:
$006C		L_interrupt_low_28:
$006C		L_interrupt_low_30:
$0070		L_Low_Interrupt_end:
$0096		_interrupt:
$00C0		L_interrupt_23:
$00C2		L_interrupt_24:
$00C6		L_Interrupt_end:
$00E0		_Delay_5500us:
$00FE		_Delay_50us:
$0108		_Lcd8_Cmd:
$011E		L_Lcd8_Cmd_0:
$014A		L_Lcd8_Cmd_1:
$014C		L_Lcd8_Cmd_2:
$0160		L_Lcd8_Cmd_3:
$0164		L_Lcd8_Cmd_4:
$0166		_my_read_keypad:
$0176		L_my_read_keypad_0:
$01AA		L_my_read_keypad_2:
$01BC		L_my_read_keypad_4:
$01CE		L_my_read_keypad_6:
$01DE		L_my_read_keypad_3:
$01DE		L_my_read_keypad_5:
$01DE		L_my_read_keypad_7:
$01DE		L_my_read_keypad_8:
$0214		L_my_read_keypad_9:
$0226		L_my_read_keypad_11:
$0238		L_my_read_keypad_13:
$0248		L_my_read_keypad_10:
$0248		L_my_read_keypad_12:
$0248		L_my_read_keypad_14:
$0248		L_my_read_keypad_15:
$027E		L_my_read_keypad_16:
$0290		L_my_read_keypad_18:
$02A2		L_my_read_keypad_20:
$02B2		L_my_read_keypad_17:
$02B2		L_my_read_keypad_19:
$02B2		L_my_read_keypad_21:
$02B2		L_my_read_keypad_22:
$02BC		L_my_read_keypad_1:
$02C2		_LCD8_Out:
$02C4		L_LCD8_Out_14:
$02CA		L_LCD8_Out_15:
$02D0		L_LCD8_Out_16:
$02D6		L_LCD8_Out_17:
$02DC		L_LCD8_Out_18:
$02E2		L_LCD8_Out_12:
$02FC		L_LCD8_Out_13:
$0318		L_LCD8_Out_19:
$0344		L_LCD8_Out_20:
$034A		_Lcd8_Chr:
$034C		L_Lcd8_Chr_7:
$0352		L_Lcd8_Chr_8:
$0358		L_Lcd8_Chr_9:
$035E		L_Lcd8_Chr_10:
$0364		L_Lcd8_Chr_11:
$036A		L_Lcd8_Chr_5:
$0384		L_Lcd8_Chr_6:
$03AC		_Lcd8_Init:
$0448		_main:
$04CC		L_main_32:
$04F0		L_main_35:
$04FA		L_main_34:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		STACK_0
$0001		STACK_1
$0002		STACK_2
$0003		STACK_3
$0004		STACK_4
$0005		STACK_5
$0006		STACK_6
$0007		STACK_7
$0008		STACK_8
$0009		STACK_9
$000A		STACK_10
$000B		STACK_11
$000C		STACK_12
$000D		STACK_13
$000E		STACK_14
$000F		STACK_15
$0010		STACK_16
$0011		STACK_17
$0012		STACK_18
$0013		STACK_19
$0014		STACK_20
$0015		Lcd8bit_main_global_dataAddress
$0017		Lcd8bit_main_global_ctrlAddress
$0019		Lcd8bit_main_global_cmd
$001A		?saveFSR0
$001C		?saveFSR1
$001E		?Low_saveWERG
$001F		?Low_saveSTATUS
$0020		?Low_saveBSR
$0021		?Low_saveFSR0
$0023		?Low_saveFSR1
$0025		lstr1_ergasia_part2
$0030		main_i_L0
$0032		FARG_Lcd8_Chr+0
$0032		FARG_Lcd8_Init+0
$0032		FARG_LCD8_Out+0
$0032		my_read_keypad_var_L0
$0033		FARG_Lcd8_Chr+1
$0033		FARG_LCD8_Out+1
$0033		my_read_keypad_key_L0
$0034		FARG_Lcd8_Chr+2
$0034		FARG_Lcd8_Init+2
$0034		FARG_LCD8_Out+2
$0036		LCD8_Out_i_L0
$0037		FARG_Lcd8_Cmd+0
$0F81		PORTB
$0F82		PORTC
$0F83		PORTD
$0F84		PORTE
$0F93		TRISB
$0F94		TRISC
$0F95		TRISD
$0FD0		RCON
$0FD8		STATUS
$0FD9		FSR2L
$0FDA		FSR2H
$0FDB		PLUSW2
$0FDC		PREINC2
$0FDD		POSTDEC2
$0FDE		POSTINC2
$0FDF		INDF2
$0FE0		BSR
$0FE1		FSR1L
$0FE2		FSR1H
$0FE3		PLUSW1
$0FE4		PREINC1
$0FE5		POSTDEC1
$0FE6		POSTINC1
$0FE7		INDF1
$0FE8		WREG
$0FE9		FSR0L
$0FEA		FSR0H
$0FEB		PLUSW0
$0FEC		PREINC0
$0FED		POSTDEC0
$0FEE		POSTINC0
$0FEF		INDF0
$0FF0		INTCON3
$0FF2		INTCON
$0FF3		PRODL
$0FF4		PRODH
$0FF5		TABLAT
$0FF6		TBLPTRL
$0FF7		TBLPTRH
$0FF8		TBLPTRU
$0FF9		PCL
$0FFA		PCLATH
$0FFB		PCLATU
$0FFD		TOSL
$0FFE		TOSH
$0FFF		TOSU


